using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using TechDashboard.ViewModels;

using Xamarin.Forms;
using TechDashboard.Models;

namespace TechDashboard.Views
{
	public class HistoryPageDetail : ContentPage
	{

		HistoryPageViewModel _vm;

		static Color asbestos = Color.FromHex("#7F8C8D");
		Color emerald = Color.FromHex("#2ECC71");
		Color alizarin = Color.FromHex("#E74C3C");
		Color peterriver = Color.FromHex("#3498DB");

		public HistoryPageDetail (string selectedTicketNumber)
		{
			_vm = new HistoryPageViewModel(selectedTicketNumber);
			Initialize();
		}

		protected void Initialize()
		{

            // Set the page title.
            Title = "History Detail";

			Label labelItemCodeTitle = new Label() {
				Text = "ITEM CODE",
				FontFamily = Device.OnPlatform("OpenSans-Bold", null, null),
				TextColor = asbestos
			};

			Label labelItemCode = new Label() {
				Text = _vm.History[0].ItemCode,
				FontFamily = Device.OnPlatform("OpenSans-Regular", null, null),
				TextColor = asbestos
			};

			Label labelItemCodeDesc = new Label() {
				Text = _vm.History[0].ItemDesc,
				FontFamily = Device.OnPlatform("OpenSans-Regular", null, null),
				TextColor = asbestos
			};

			StackLayout itemCodeLayout = new StackLayout() {
				Orientation = StackOrientation.Horizontal,
				HorizontalOptions = LayoutOptions.FillAndExpand,
				Children = {
					labelItemCodeTitle,
					labelItemCode,
					labelItemCodeDesc
				}
			};

			Label mfgSerNoTitle = new Label() {
				Text = "MFG SER NO",
				FontFamily = Device.OnPlatform("OpenSans-Bold", null, null),
				TextColor = asbestos
			};

			Label mfgSerNo = new Label() {
				Text = _vm.History[0].MfgSerialNo,
				FontFamily = Device.OnPlatform("OpenSans-Regular", null, null),
				TextColor = asbestos
			};

			Label mfgSerNoDesc = new Label() {
				Text = _vm.History[0].EADesc,
				FontFamily = Device.OnPlatform("OpenSans-Regular", null, null),
				TextColor = asbestos
			};

			StackLayout mfgLayout = new StackLayout() {
				Orientation = StackOrientation.Horizontal,
				HorizontalOptions = LayoutOptions.FillAndExpand,
				Children = {
					mfgSerNoTitle,
					mfgSerNo,
					mfgSerNoDesc
				}
			};

			Label intSerNoTitle = new Label() {
				Text = "INT SER NO",
				FontFamily = Device.OnPlatform("OpenSans-Bold", null, null),
				TextColor = asbestos
			};
			Label intSerNo = new Label() {
				Text = _vm.History[0].IntSerialNo,
				FontFamily = Device.OnPlatform("OpenSans-Regular", null, null),
				TextColor = asbestos
			};
			Label modelNoTitle = new Label() {
				Text = "MODEL NO",
				FontFamily = Device.OnPlatform("OpenSans-Bold", null, null),
				TextColor = asbestos
			};
			Label modelNo = new Label() {
				Text = _vm.History[0].ModelNo,
				FontFamily = Device.OnPlatform("OpenSans-Regular", null, null)
			};
			StackLayout serModelNoLayout = new StackLayout() {
				Orientation = StackOrientation.Horizontal,
				HorizontalOptions = LayoutOptions.FillAndExpand,
				Children = {
					intSerNoTitle,
					intSerNo,
					modelNoTitle,
					modelNo
				}
			};

			//history 
			ListView historyList = new ListView() {
				ItemsSource = _vm.History,
				ItemTemplate = new DataTemplate(typeof(HistoryCell)),
                SeparatorVisibility = SeparatorVisibility.None,
                HasUnevenRows = true
			};

			Content = new StackLayout {
				Padding = 30,
				Children = {
					new StackLayout {
						BackgroundColor = peterriver,
						Padding = 50,
						HorizontalOptions = LayoutOptions.FillAndExpand,
						VerticalOptions = LayoutOptions.Start,
						Children = {
							new Xamarin.Forms.Label { 
								Text = "HISTORY",
								FontFamily = Device.OnPlatform("OpenSans-Bold", null, null),
								TextColor = Color.White,
								HorizontalOptions = LayoutOptions.CenterAndExpand,
								VerticalOptions = LayoutOptions.Center
							}
						}
					},
					itemCodeLayout,
					mfgLayout,
					serModelNoLayout,
					historyList
				}
			};

		}

		class HistoryCell : ViewCell
		{
			public HistoryCell() 
			{
				int rowindex = 1;
				if (!Application.Current.Properties.ContainsKey("historyrowindex"))
				{
					Application.Current.Properties["historyrowindex"] = rowindex;
				}
				rowindex = Convert.ToInt32(Application.Current.Properties["historyrowindex"]);
				Color rowcolor = Color.FromHex("#FFFFFF");
				if (rowindex % 2 == 0)
				{
					rowcolor = Color.FromHex("#ECF0F1");
				} else {
					rowcolor = Color.FromHex("#FFFFFF");
				}
				rowindex = rowindex + 1;
				Application.Current.Properties["historyrowindex"] = rowindex;

				Label labelDate = new Label();
				labelDate.TextColor = asbestos;
				labelDate.FontFamily = Device.OnPlatform("OpenSans-Regular", null, null);
				labelDate.SetBinding(Label.TextProperty, "TransactionDate", stringFormat: "{0:MM/dd/yyyy}");

				Label labelTrx = new Label();
				labelTrx.TextColor = asbestos;
				labelTrx.FontFamily = Device.OnPlatform("OpenSans-Regular" ,null, null);
				labelTrx.SetBinding(Label.TextProperty, "Trx");

				Label labelServiceTicketNo = new Label();
				labelServiceTicketNo.TextColor = asbestos;
				labelServiceTicketNo.FontFamily = Device.OnPlatform("OpenSans-Regular", null, null);
				labelServiceTicketNo.SetBinding(Label.TextProperty, "ServiceTicketNo");

				Label labelItemEmployee = new Label();
				labelItemEmployee.TextColor = asbestos;
				labelItemEmployee.FontFamily = Device.OnPlatform("OpenSans-Regular", null, null);
				labelItemEmployee.SetBinding(Label.TextProperty, "ItemEmployee");

				Label labelDescription = new Label();
				labelDescription.TextColor = asbestos;
				labelDescription.FontFamily = Device.OnPlatform("OpenSans-Regular", null, null);
				labelDescription.SetBinding(Label.TextProperty, "Description");

				Label labelQuantity = new Label();
				labelQuantity.TextColor = asbestos;
				labelQuantity.FontFamily = Device.OnPlatform("OpenSans-Regular", null, null);
				labelQuantity.SetBinding(Label.TextProperty, "Quantity");

				StackLayout rowLayout = new StackLayout()
				{
					BackgroundColor = rowcolor,
					Spacing = 10,
					Orientation = StackOrientation.Horizontal,
					Children = {
						labelDate,
						labelTrx,
						labelServiceTicketNo,
						labelItemEmployee,
						labelDescription,
						labelQuantity
					}
				};
				View = rowLayout;
			}

		}
	}
}
